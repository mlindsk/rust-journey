---
title: "Lindskou's Rust Journey"
format:
  gfm:
    toc: true
jupyter: python3
---

Let's see how long the journey will be; depends on the kids bedtime and the relevance for Rust at my work.

# Primer

A lot of the material is from the resources 

 - https://doc.rust-lang.org/book/
 - https://doc.rust-lang.org/rust-by-example/

which I have either just run as is or changed to understand. 

# Compilation 

In `Cargo.toml` many different binaries are define, e.g.

```toml
[[bin]]
name = "primitives"
path = "src/01-primitives/main.rs"
```

This tells rust, that there is a main file in `src/01-primitives/` that should be compiled. In addition it has been given the name `primitives` and one can type `make primitives` to automatically compile and run this. This is just sugar for the command `cargo run --bin primitives`.

# Cargo

```bash
cargo new # Instantiate new project and make a git repo
cargo build # Build the project
cargo run # Build and run the project
cargo check # Check if the project compiles (not producing executable)
```

# Rustup

A toolchain for Rust: https://doc.rust-lang.org/book/ch01-01-installation.html

# Emacs Setup

 - Install Rust: `curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh`
 - Emacs Rust mode: https://github.com/rust-lang/rust-mode
 - Rust analyzer (LSP): `rustup component add rust-analyzer`
